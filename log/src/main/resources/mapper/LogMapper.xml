<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yc.log.mapper.blog.LogMapper" >
  <resultMap id="BaseResultMap" type="com.yc.log.model.po.Log" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="app_name" property="appName" jdbcType="CHAR" />
    <result column="log_type" property="logType" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="method_name" property="methodName" jdbcType="VARCHAR" />
    <result column="request_params" property="requestParams" jdbcType="VARCHAR" />
    <result column="method_description" property="methodDescription" jdbcType="VARCHAR" />
    <result column="request_ip" property="requestIp" jdbcType="VARCHAR" />
    <result column="request_url" property="requestUrl" jdbcType="VARCHAR" />
    <result column="exception_code" property="exceptionCode" jdbcType="VARCHAR" />
    <result column="exception_detail" property="exceptionDetail" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yc.log.model.po.Log" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, app_name, log_type, user_name, method_name, request_params, method_description, 
    request_ip, request_url, exception_code, exception_detail, create_time, status
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yc.log.model.po.LogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yc.log.model.po.LogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from log
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yc.log.model.po.LogExample" >
    delete from log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yc.log.model.po.Log" >
    insert into log (id, app_name, log_type, 
      user_name, method_name, request_params, 
      method_description, request_ip, request_url, 
      exception_code, exception_detail, create_time, 
      status, content)
    values (#{id,jdbcType=CHAR}, #{appName,jdbcType=CHAR}, #{logType,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{methodName,jdbcType=VARCHAR}, #{requestParams,jdbcType=VARCHAR}, 
      #{methodDescription,jdbcType=VARCHAR}, #{requestIp,jdbcType=VARCHAR}, #{requestUrl,jdbcType=VARCHAR}, 
      #{exceptionCode,jdbcType=VARCHAR}, #{exceptionDetail,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yc.log.model.po.Log" >
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="appName != null" >
        app_name,
      </if>
      <if test="logType != null" >
        log_type,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="methodName != null" >
        method_name,
      </if>
      <if test="requestParams != null" >
        request_params,
      </if>
      <if test="methodDescription != null" >
        method_description,
      </if>
      <if test="requestIp != null" >
        request_ip,
      </if>
      <if test="requestUrl != null" >
        request_url,
      </if>
      <if test="exceptionCode != null" >
        exception_code,
      </if>
      <if test="exceptionDetail != null" >
        exception_detail,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="appName != null" >
        #{appName,jdbcType=CHAR},
      </if>
      <if test="logType != null" >
        #{logType,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null" >
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="requestParams != null" >
        #{requestParams,jdbcType=VARCHAR},
      </if>
      <if test="methodDescription != null" >
        #{methodDescription,jdbcType=VARCHAR},
      </if>
      <if test="requestIp != null" >
        #{requestIp,jdbcType=VARCHAR},
      </if>
      <if test="requestUrl != null" >
        #{requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="exceptionCode != null" >
        #{exceptionCode,jdbcType=VARCHAR},
      </if>
      <if test="exceptionDetail != null" >
        #{exceptionDetail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yc.log.model.po.LogExample" resultType="java.lang.Integer" >
    select count(*) from log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.appName != null" >
        app_name = #{record.appName,jdbcType=CHAR},
      </if>
      <if test="record.logType != null" >
        log_type = #{record.logType,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.methodName != null" >
        method_name = #{record.methodName,jdbcType=VARCHAR},
      </if>
      <if test="record.requestParams != null" >
        request_params = #{record.requestParams,jdbcType=VARCHAR},
      </if>
      <if test="record.methodDescription != null" >
        method_description = #{record.methodDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.requestIp != null" >
        request_ip = #{record.requestIp,jdbcType=VARCHAR},
      </if>
      <if test="record.requestUrl != null" >
        request_url = #{record.requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.exceptionCode != null" >
        exception_code = #{record.exceptionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.exceptionDetail != null" >
        exception_detail = #{record.exceptionDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update log
    set id = #{record.id,jdbcType=CHAR},
      app_name = #{record.appName,jdbcType=CHAR},
      log_type = #{record.logType,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      method_name = #{record.methodName,jdbcType=VARCHAR},
      request_params = #{record.requestParams,jdbcType=VARCHAR},
      method_description = #{record.methodDescription,jdbcType=VARCHAR},
      request_ip = #{record.requestIp,jdbcType=VARCHAR},
      request_url = #{record.requestUrl,jdbcType=VARCHAR},
      exception_code = #{record.exceptionCode,jdbcType=VARCHAR},
      exception_detail = #{record.exceptionDetail,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update log
    set id = #{record.id,jdbcType=CHAR},
      app_name = #{record.appName,jdbcType=CHAR},
      log_type = #{record.logType,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      method_name = #{record.methodName,jdbcType=VARCHAR},
      request_params = #{record.requestParams,jdbcType=VARCHAR},
      method_description = #{record.methodDescription,jdbcType=VARCHAR},
      request_ip = #{record.requestIp,jdbcType=VARCHAR},
      request_url = #{record.requestUrl,jdbcType=VARCHAR},
      exception_code = #{record.exceptionCode,jdbcType=VARCHAR},
      exception_detail = #{record.exceptionDetail,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yc.log.model.po.Log" >
    update log
    <set >
      <if test="appName != null" >
        app_name = #{appName,jdbcType=CHAR},
      </if>
      <if test="logType != null" >
        log_type = #{logType,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null" >
        method_name = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="requestParams != null" >
        request_params = #{requestParams,jdbcType=VARCHAR},
      </if>
      <if test="methodDescription != null" >
        method_description = #{methodDescription,jdbcType=VARCHAR},
      </if>
      <if test="requestIp != null" >
        request_ip = #{requestIp,jdbcType=VARCHAR},
      </if>
      <if test="requestUrl != null" >
        request_url = #{requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="exceptionCode != null" >
        exception_code = #{exceptionCode,jdbcType=VARCHAR},
      </if>
      <if test="exceptionDetail != null" >
        exception_detail = #{exceptionDetail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yc.log.model.po.Log" >
    update log
    set app_name = #{appName,jdbcType=CHAR},
      log_type = #{logType,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      request_params = #{requestParams,jdbcType=VARCHAR},
      method_description = #{methodDescription,jdbcType=VARCHAR},
      request_ip = #{requestIp,jdbcType=VARCHAR},
      request_url = #{requestUrl,jdbcType=VARCHAR},
      exception_code = #{exceptionCode,jdbcType=VARCHAR},
      exception_detail = #{exceptionDetail,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yc.log.model.po.Log" >
    update log
    set app_name = #{appName,jdbcType=CHAR},
      log_type = #{logType,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      request_params = #{requestParams,jdbcType=VARCHAR},
      method_description = #{methodDescription,jdbcType=VARCHAR},
      request_ip = #{requestIp,jdbcType=VARCHAR},
      request_url = #{requestUrl,jdbcType=VARCHAR},
      exception_code = #{exceptionCode,jdbcType=VARCHAR},
      exception_detail = #{exceptionDetail,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>