<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yc.log.mapper.LogMapper">
  <resultMap id="BaseResultMap" type="com.yc.log.model.Log">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="app_name" jdbcType="CHAR" property="appName" />
    <result column="log_type" jdbcType="INTEGER" property="logType" />
    <result column="user" jdbcType="VARCHAR" property="user" />
    <result column="method_name" jdbcType="VARCHAR" property="methodName" />
    <result column="request_params" jdbcType="VARCHAR" property="requestParams" />
    <result column="method_description" jdbcType="VARCHAR" property="methodDescription" />
    <result column="request_ip" jdbcType="VARCHAR" property="requestIp" />
    <result column="request_uri" jdbcType="VARCHAR" property="requestUri" />
    <result column="request_path" jdbcType="VARCHAR" property="requestPath" />
    <result column="exception_code" jdbcType="VARCHAR" property="exceptionCode" />
    <result column="exception_detail" jdbcType="VARCHAR" property="exceptionDetail" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yc.log.model.Log">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, app_name, log_type, `user`, method_name, request_params, method_description, 
    request_ip, request_uri, request_path, exception_code, exception_detail, create_date, 
    `status`
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from log
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.yc.log.model.Log">
    insert into log (id, app_name, log_type, 
      `user`, method_name, request_params, 
      method_description, request_ip, request_uri, 
      request_path, exception_code, exception_detail, 
      create_date, `status`, content
      )
    values (#{id,jdbcType=CHAR}, #{appName,jdbcType=CHAR}, #{logType,jdbcType=INTEGER}, 
      #{user,jdbcType=VARCHAR}, #{methodName,jdbcType=VARCHAR}, #{requestParams,jdbcType=VARCHAR}, 
      #{methodDescription,jdbcType=VARCHAR}, #{requestIp,jdbcType=VARCHAR}, #{requestUri,jdbcType=VARCHAR}, 
      #{requestPath,jdbcType=VARCHAR}, #{exceptionCode,jdbcType=VARCHAR}, #{exceptionDetail,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yc.log.model.Log">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="appName != null">
        app_name,
      </if>
      <if test="logType != null">
        log_type,
      </if>
      <if test="user != null">
        `user`,
      </if>
      <if test="methodName != null">
        method_name,
      </if>
      <if test="requestParams != null">
        request_params,
      </if>
      <if test="methodDescription != null">
        method_description,
      </if>
      <if test="requestIp != null">
        request_ip,
      </if>
      <if test="requestUri != null">
        request_uri,
      </if>
      <if test="requestPath != null">
        request_path,
      </if>
      <if test="exceptionCode != null">
        exception_code,
      </if>
      <if test="exceptionDetail != null">
        exception_detail,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="appName != null">
        #{appName,jdbcType=CHAR},
      </if>
      <if test="logType != null">
        #{logType,jdbcType=INTEGER},
      </if>
      <if test="user != null">
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="requestParams != null">
        #{requestParams,jdbcType=VARCHAR},
      </if>
      <if test="methodDescription != null">
        #{methodDescription,jdbcType=VARCHAR},
      </if>
      <if test="requestIp != null">
        #{requestIp,jdbcType=VARCHAR},
      </if>
      <if test="requestUri != null">
        #{requestUri,jdbcType=VARCHAR},
      </if>
      <if test="requestPath != null">
        #{requestPath,jdbcType=VARCHAR},
      </if>
      <if test="exceptionCode != null">
        #{exceptionCode,jdbcType=VARCHAR},
      </if>
      <if test="exceptionDetail != null">
        #{exceptionDetail,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yc.log.model.Log">
    update log
    <set>
      <if test="appName != null">
        app_name = #{appName,jdbcType=CHAR},
      </if>
      <if test="logType != null">
        log_type = #{logType,jdbcType=INTEGER},
      </if>
      <if test="user != null">
        `user` = #{user,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        method_name = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="requestParams != null">
        request_params = #{requestParams,jdbcType=VARCHAR},
      </if>
      <if test="methodDescription != null">
        method_description = #{methodDescription,jdbcType=VARCHAR},
      </if>
      <if test="requestIp != null">
        request_ip = #{requestIp,jdbcType=VARCHAR},
      </if>
      <if test="requestUri != null">
        request_uri = #{requestUri,jdbcType=VARCHAR},
      </if>
      <if test="requestPath != null">
        request_path = #{requestPath,jdbcType=VARCHAR},
      </if>
      <if test="exceptionCode != null">
        exception_code = #{exceptionCode,jdbcType=VARCHAR},
      </if>
      <if test="exceptionDetail != null">
        exception_detail = #{exceptionDetail,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yc.log.model.Log">
    update log
    set app_name = #{appName,jdbcType=CHAR},
      log_type = #{logType,jdbcType=INTEGER},
      `user` = #{user,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      request_params = #{requestParams,jdbcType=VARCHAR},
      method_description = #{methodDescription,jdbcType=VARCHAR},
      request_ip = #{requestIp,jdbcType=VARCHAR},
      request_uri = #{requestUri,jdbcType=VARCHAR},
      request_path = #{requestPath,jdbcType=VARCHAR},
      exception_code = #{exceptionCode,jdbcType=VARCHAR},
      exception_detail = #{exceptionDetail,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yc.log.model.Log">
    update log
    set app_name = #{appName,jdbcType=CHAR},
      log_type = #{logType,jdbcType=INTEGER},
      `user` = #{user,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      request_params = #{requestParams,jdbcType=VARCHAR},
      method_description = #{methodDescription,jdbcType=VARCHAR},
      request_ip = #{requestIp,jdbcType=VARCHAR},
      request_uri = #{requestUri,jdbcType=VARCHAR},
      request_path = #{requestPath,jdbcType=VARCHAR},
      exception_code = #{exceptionCode,jdbcType=VARCHAR},
      exception_detail = #{exceptionDetail,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>